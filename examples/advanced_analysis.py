#!/usr/bin/env python3
"""
Advanced Analysis Crew Example

This example demonstrates a more complex workflow with multiple agents
working together for comprehensive analysis and strategic planning.
"""

import sys
import os
from pathlib import Path

# Add the src directory to the Python path
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))

from ai_crew import AICrewManager
from rich.console import Console
from rich.table import Table

console = Console()


def main():
    """Run the advanced analysis example."""
    console.print("üß† [bold blue]Advanced Analysis Crew Example[/bold blue]")
    console.print("=" * 60)
    
    try:
        # Initialize the AI Crew Manager
        console.print("üîß Initializing AI Crew Manager...")
        manager = AICrewManager()
        
        # Create an analysis crew
        console.print("üë• Creating analysis crew (Researcher + Analyst + Writer)...")
        crew = manager.create_analysis_crew()
        
        # Show available analysis topics
        table = Table(title="üìã Suggested Analysis Topics")
        table.add_column("Option", style="cyan", no_wrap=True)
        table.add_column("Topic", style="magenta")
        table.add_column("Description", style="green")
        
        topics = [
            ("1", "Market Analysis", "Comprehensive market research and competitive analysis"),
            ("2", "Technology Trends", "Analysis of emerging technology trends and implications"),
            ("3", "Business Strategy", "Strategic business analysis and recommendations"),
            ("4", "Industry Report", "In-depth industry analysis and future outlook"),
            ("5", "Custom Topic", "Enter your own topic for analysis")
        ]
        
        for option, topic, description in topics:
            table.add_row(option, topic, description)
        
        console.print(table)
        
        # Get user choice
        choice = input("\nüéØ Select an option (1-5): ").strip()
        
        if choice == "1":
            topic = "Current state and future trends in the electric vehicle market"
        elif choice == "2":
            topic = "Impact of artificial intelligence on software development practices"
        elif choice == "3":
            topic = "Digital transformation strategies for traditional retail businesses"
        elif choice == "4":
            topic = "Renewable energy industry outlook for the next decade"
        elif choice == "5":
            topic = input("üìù Enter your custom topic: ").strip()
        else:
            topic = "The future of remote work and its impact on business operations"
        
        console.print(f"\nüîç Analyzing topic: [bold green]{topic}[/bold green]")
        
        # Execute the crew
        result = manager.execute_crew(crew, {"topic": topic})
        
        # Display results
        console.print("\n" + "=" * 80)
        console.print("üìä [bold green]Analysis Results:[/bold green]")
        console.print("=" * 80)
        console.print(result)
        
        # Save results to file
        output_dir = Path("output") / "analysis"
        output_dir.mkdir(parents=True, exist_ok=True)
        
        output_file = output_dir / f"analysis_{topic.replace(' ', '_')[:40]}.md"
        
        with open(output_file, 'w', encoding='utf-8') as f:
            f.write(f"# Analysis Report: {topic}\n\n")
            f.write(f"**Generated by Self-Hosted Agentic AI**\n\n")
            f.write("---\n\n")
            f.write(str(result))
        
        console.print(f"\nüíæ Analysis saved to: [bold blue]{output_file}[/bold blue]")
        
        # Offer to run another analysis
        if input("\nüîÑ Run another analysis? (y/N): ").lower().startswith('y'):
            main()
        
    except KeyboardInterrupt:
        console.print("\n‚ö†Ô∏è  Operation cancelled by user.")
    except Exception as e:
        console.print(f"\n‚ùå Error: {e}")
        console.print("üí° Make sure Ollama is running: `ollama serve`")


if __name__ == "__main__":
    main()