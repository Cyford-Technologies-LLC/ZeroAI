python -c "import torch; print(torch.cuda.is_available(), torch.version.cuda, torch.cuda.get_device_name(0))"


python /app/SadTalker/inference.py --driven_audio /tmp/tmpvfrejnrk_fixed.wav --source_image /app/faces/2.jpg --result_dir /app/static/sadtalker_output/chunk_0 --still --preprocess crop --enhancer gfpgan



 curl -X POST http://localhost:444/generate?mode=simple   -H "Content-Type: application/json"   -d '{"prompt":"","tts_engine":"espeak","tts_options":{"speed":160}}'   -o test_espeak.mp4


// 30 sec   audio
curl -X POST http://localhost:444/generate?mode=simple -H "Content-Type: application/json" -d '{"prompt":"Artificial Intelligence, or AI, is transforming the world in remarkable ways. From powering virtual assistants and recommendation systems to enabling self-driving cars and medical diagnostics, AI is reshaping how we live and work. At its core, AI is the science of creating machines that can perform tasks requiring human intelligence—such as learning, problem-solving, understanding language, and recognizing patterns. With advances in machine learning and deep learning, AI systems are becoming more sophisticated, adapting to data and improving over time without explicit programming. While AI offers enormous benefits, it also raises important questions around ethics, privacy, and the future of jobs. As AI continues to evolve, it is essential that we use it responsibly—balancing innovation with thoughtful oversight. The goal isn'\''t just to create smart machines, but to ensure they serve humanity in safe, transparent, and meaningful ways.","tts_engine":"espeak","tts_options":{"speed":160}}' -o test_espeak.mp4

curl -X POST http://localhost:444/generate?mode=sadtalker -H "Content-Type: application/json" -d '{"prompt":"Artificial Intelligence, or AI, is transforming the world in remarkable ways. From powering virtual assistants and recommendation systems to enabling self-driving cars and medical diagnostics, AI is reshaping how we live and work. At its core, AI is the science of creating machines that can perform tasks requiring human intelligence—such as learning, problem-solving, understanding language, and recognizing patterns. With advances in machine learning and deep learning, AI systems are becoming more sophisticated, adapting to data and improving over time without explicit programming. While AI offers enormous benefits, it also raises important questions around ethics, privacy, and the future of jobs. As AI continues to evolve, it is essential that we use it responsibly—balancing innovation with thoughtful oversight. The goal isn'\''t just to create smart machines, but to ensure they serve humanity in safe, transparent, and meaningful ways.","tts_engine":"espeak","tts_options":{"speed":160}}' -o test_espeak.mp4





// Option 1: Standard
fetch("/generate", {method:"POST", body: JSON.stringify({mode:"sadtalker"})})
  .then(r => r.json())
  .then(d => { video.src = d.video_url; video.play(); });

// Option 2: Chunked (polling)
async function pollChunks() {
    const resp = await fetch("/generate", {method:"POST", body: JSON.stringify({mode:"sadtalker", stream_mode:"chunked"})});
    const data = await resp.json();
    for (const chunk of data.chunks) {
        // append each chunk to <video> or <canvas>
    }
}

// Option 3: Real-time WebSocket
const ws = new WebSocket("ws://localhost:7860/stream");
ws.onmessage = (event) => {
    const blob = new Blob([event.data], {type:"image/jpeg"});
    const img = new Image();
    img.src = URL.createObjectURL(blob);
    img.onload = () => { canvasCtx.drawImage(img,0,0); }
};

























1️⃣ Typical TTS capabilities you can expose through tts_options
Key in tts_options	Meaning	Typical Values
voice / speaker	Which voice or speaker to use.	"en_male", "en_female", "speaker_1", "speaker_2"
language	Output language or accent.	"en-US", "en-GB", "fr-FR", "es-ES"
rate / speed	Speaking rate multiplier.	0.5 (half speed) to 2.0 (double speed)
pitch	Pitch shift in semitones.	-5 (lower) to +5 (higher)
emotion / style	Expressive styles.	"neutral", "cheerful", "angry", "sad", "whisper"
volume	Output gain control.	-10 to +10 dB or percent
sample_rate	Audio sample rate.	16000, 22050, 48000
format	Audio output format.	"wav", "mp3", "ogg", "pcm"
text_type	How text is interpreted.	"plain", "ssml" (if the engine supports SSML tags)
split_sentences	Automatically chunk long text.	true/false

(exact keys depend on your underlying TTS engine, but almost all support some subset of these)